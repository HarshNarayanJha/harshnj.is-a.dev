---
import { Image } from "astro:assets"
import { Icon } from "astro-icon/components"
import { getCollection } from "astro:content"

import Layout from "@layouts/Layout.astro"
import TransparentBorder from "@components/reusable/TransparentBorder.astro"
import { formatMonth } from "~/utils"

const experiences = (await getCollection("experiences")).sort((a, b) => b.data.start.valueOf() - a.data.start.valueOf())

const title = "About Me | Harsh Narayan Jha"
const description = "Harsh Narayan Jha's About Page"

const skills = [
  {
    name: "Python",
    tooltip: "First Computer Language learnt. I can make anything with this. My favorite!",
    logo: "skills/python",
  },
  { name: "Django", tooltip: "My goto web fullstack framework before NextJS", logo: "skills/django" },
  { name: "Flutter", tooltip: "This is what I make mobile Apps in!", logo: "skills/flutter" },
  {
    name: "C++",
    tooltip: "Super performant programming language for low level stuff, including C",
    logo: "skills/cpp",
  },
  { name: "Rust", tooltip: "Learning Rust since it's awesome!", logo: "skills/rust" },
  { name: "TypeScript", tooltip: "I think TypeScript is better than JavaScript", logo: "skills/ts" },
  { name: "JavaScript", tooltip: "But JavaScript is also great!", logo: "skills/js" },
  { name: "Unity", tooltip: "Used to use Unity, before it went downhill with stuff", logo: "skills/unity" },
  { name: "Godot", tooltip: "I make games in Godot now", logo: "skills/godot" },
  { name: "Next.js", tooltip: "It is just amazing, but not for everything!", logo: "skills/next" },
  { name: "Vue.js", tooltip: "Vue is nice!", logo: "skills/vue" },
  { name: "MongoDB", tooltip: "Just, used...", logo: "skills/mongo" },
  { name: "Docker", tooltip: "Just used...", logo: "skills/docker" },
  { name: "AWS", tooltip: "Too difficult to fully master", logo: "skills/aws" },
  {
    name: "Tailwind",
    tooltip: "Before you actually use it, you think it will increase your work. But...",
    logo: "skills/tailwind",
  },
  { name: "Supabase", tooltip: "It's Awesome, much better than AWS for simple stuff", logo: "skills/supabase" },
  { name: "Blender", tooltip: "Made a lot of stuff in blender", logo: "skills/blender" },
  { name: "Arch Linux", tooltip: "My primary Operating System. I love it", logo: "skills/arch" },
  { name: "Git", tooltip: "Thank god Linux made this. Also thanks for Linux ❤️", logo: "skills/git" },
  { name: "Zed", tooltip: "The IDE I use. Much better than VSCode", logo: "skills/zed" },
]
---

<Layout title={title} description={description}>
  <section class="h-auto w-full px-4 py-16 md:px-16 md:py-28">
    <div class="mx-auto text-center">
      <Icon name="about" class="m-2 inline" size={24} />
      <h2 class="mt-2 text-center text-4xl font-semibold">About Me</h2>
    </div>

    <div class="prose dark:prose-invert prose-lg prose-neutral mx-auto mt-16 md:mt-32">
      <h1 class="not-prose text-3xl font-bold text-neutral-950 dark:text-white">Harsh Narayan Jha</h1>
      <p class="mt-1 flex flex-row gap-1">
        <Icon name="exp/education" size={24} class="inline-block" />
        <span> Student at Birla Institute of Technology </span>
      </p>

      <p>
        Hi There! I am Harsh, and I like to build things. I am currently a student at Birla Institute of Technology,
        Deoghar, pursuing my BTech in Computer Science Engineering. I spend my time tinkering with things and
        experimenting with.
      </p>
      <p>
        You can rely on me as an full-stack engineer, a game dev, or an app dev. I have a knack for problem-solving and
        a passion for learning new technologies. I have expertise in various programming languages and frameworks,
        including Python, JS/TS, React/NextJS, Svelte, Flutter, Unity/Godot, Kotlin, C++, Rust and more.
      </p>

      <p>
        I use Arch Linux and Hyprland as my daily driver, and carry an Android Phone. I don't hate windows, but it is
        now horrible to use. I love making an contributing to open source projects.
      </p>

      <p>Here are some of the things I enjoy</p>
      <div class="flex w-full flex-row flex-wrap gap-2">
        {
          skills.map((skill) => {
            return (
              <div class="inline-block" data-tippy-content={skill.tooltip}>
                <Icon name={skill.logo} size={36} />
              </div>
            )
          })
        }
      </div>
    </div>
  </section>

  <section id="about-experiences" class="h-auto w-full px-4 py-16 md:px-16">
    <div class="mx-auto text-center">
      <Icon name="work" class="m-2 inline" size={24} />
      <h3 class="mt-2 text-center text-2xl font-semibold">Experiences</h3>
    </div>

    <div class="mx-auto mt-16 flex flex-col gap-8 md:px-12 lg:px-40">
      {
        experiences.map((exp) => {
          return (
            <TransparentBorder class="p-4 md:border-0">
              <div class="grid grid-cols-1 items-start gap-4 md:grid-cols-[1fr_2fr] md:gap-16">
                <p class="prose dark:prose-invert prose-neutral mt-0 font-mono md:self-start md:justify-self-end">
                  {formatMonth(exp.data.start)} - {exp.data.end === "PRESENT" ? "PRESENT" : formatMonth(exp.data.end)}
                </p>
                <div class="md:self-start md:justify-self-start">
                  <div class="md:md-0 mt-2 flex flex-row items-center gap-1">
                    {Array(exp.data.level)
                      .fill(0)
                      .map(() => (
                        <Icon name={`exp/${exp.data.type}`} class="inline-block" size={24} />
                      ))}
                    <h4 class="inline-block font-semibold">{exp.data.role}</h4>
                  </div>
                  <p class="mt-2 flex flex-row flex-wrap items-center gap-2 md:mt-2">
                    {exp.data.logo && (
                      <Image src={exp.data.logo} alt={exp.data.at} width={28} class="inline-block h-7 w-7 rounded-md" />
                    )}
                    {exp.data.link ? (
                      <a
                        href={exp.data.link}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="cursor-newtab font-medium hover:underline"
                      >
                        {exp.data.at}
                      </a>
                    ) : (
                      <span class="font-medium">{exp.data.at}</span>
                    )}
                    &mdash;
                    <span class="italic">{exp.data.location}</span>
                  </p>
                  <div class="prose dark:prose-invert prose-neutral">
                    <p class="mt-4">{exp.data.description}</p>
                    <ul class="">
                      {exp.data.points.map((pt) => (
                        <li>{pt}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            </TransparentBorder>
          )
        })
      }
    </div>
  </section>
</Layout>
