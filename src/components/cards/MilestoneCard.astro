---
import TransparentBorder from "@/components/reusable/TransparentBorder.astro"
import { Picture } from "astro:assets"
import type { CollectionEntry } from "astro:content"
import { Icon } from "astro-icon/components"

import placeholderImage from "@/img/placeholder.png"

interface Props {
  class: string
  milestone: CollectionEntry<"milestones">["data"]
  [key: string]: any
}

const { class: className, milestone, ...rest } = Astro.props
---

<TransparentBorder class={className} enableHoverScale={false} {rest}>
  <div
    class="flex h-full flex-col justify-between gap-4 rounded-lg border-2 border-slate-300/50 bg-white p-4 pt-2 shadow md:min-h-52 md:px-8 md:py-4 dark:border-zinc-800/50 dark:bg-gray-950"
  >
    <div class="flex flex-col-reverse items-start justify-start gap-4 md:flex-row md:gap-8">
      <div class="flex h-full w-full flex-col items-start justify-start">
        <div>
          <h3 class="text-2xl font-semibold">
            {milestone.title}
          </h3>

          <p class="prose dark:prose-invert mt-2 line-clamp-4">
            {milestone.description}
          </p>
        </div>
      </div>
      <div class="self-center">
        {
          milestone.thumbnail ? (
            <Picture
              src={milestone.thumbnail}
              alt={milestone.title}
              formats={["avif", "webp"]}
              class="aspect-video w-full rounded-2xl border-2 border-b-0 border-slate-200/50 object-contain md:aspect-square md:w-[200px] dark:border-slate-600/50"
              width={200}
              layout="constrained"
            />
          ) : (
            <Picture
              src={placeholderImage}
              alt="Blog Placeholder"
              formats={["avif", "webp"]}
              class="aspect-video w-full rounded-2xl border-2 border-b-0 border-slate-200/50 object-cover md:aspect-square md:w-[200px] dark:border-slate-600/50"
              width={100}
              layout="constrained"
            />
          )
        }
      </div>
    </div>
    <div class="flex h-min w-full flex-row gap-2">
      {
        milestone.document && (
          <a href={milestone.document} target="_blank" data-tippy-content="Document/Certificate">
            <button
              class:list={[
                "cursor-newtab p-1 font-semibold text-white ring-0 ring-teal-500/25 hover:ring dark:ring-teal-600/50",
                "rounded-sm transition-all hover:ring-offset-2",
              ]}
              tabindex="-1"
            >
              <Icon name="document" class="inline" size={24} />
            </button>
          </a>
        )
      }
      {
        milestone.urls.map(({ name, url }) => (
          <a href={url} target="_blank" rel="noopener noreferrer" data-tippy-content={name}>
            <button
              class:list={[
                "cursor-newtab p-1 font-semibold text-white ring-0 ring-teal-500/25 hover:ring dark:ring-teal-600/50",
                "rounded-sm transition-all hover:ring-offset-2",
              ]}
              tabindex="-1"
            >
              <Icon name="link" class="inline" size={24} />
            </button>
          </a>
        ))
      }
    </div>
  </div>
</TransparentBorder>
